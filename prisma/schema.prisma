// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/_generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===== Enums =====
enum Role {
  USER
  ADMIN
}

enum Status {
  REMOVED
  NEW
  USED
  DAMAGED
}

enum StudentStatus {
  ACTIVE
  INACTIVE
  TEACHER
  OLD
}


// ===== Auth =====
model User {
  id       String  @id @default(cuid())
  password String
  name     String
  role     Role    @default(USER)
  active   Boolean @default(true)
}

// ===== Models =====
model Book {
  isbn  String @id @unique
  name  String
  items Item[]
}

model Item {
  id        String   @id @unique
  isbn      String
  status    Status   @default(NEW)
  createdAt DateTime @default(now())
  Borrow    Borrow[]
  book      Book     @relation(fields: [isbn], references: [isbn])
}

model Student {
  id        Int      @id @unique @default(autoincrement())
  lastname  String
  firstname String
  status    StudentStatus @default(ACTIVE)
  course    String?
  idOld     Int?
  Borrow    Borrow[]
}

model Borrow {
  id        Int       @id @unique @default(autoincrement())
  itemId    String
  studentId Int
  active    Boolean   @default(true)
  leased    DateTime  @default(now())
  returned  DateTime?
  item      Item      @relation(fields: [itemId], references: [id])
  student   Student   @relation(fields: [studentId], references: [id])
}
